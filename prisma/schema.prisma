// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminPanel {
  id           String    @id @unique @default(uuid())
  creationTime DateTime
  updationTime DateTime?
  userId       String
  roleId       String
}

model Balance {
  id                           String    @id @unique @default(uuid())
  userId                       String    @unique
  investedMoneyInBDT           Float
  withdrawedMoneyInBDT         Float
  returnOnInvestmentMoneyInBDT Float
  referredMoneyInBDT           Float
  extraMoneyInBDT              Float
  balanceInBDT                 Float
  creationTime                 DateTime
  updationTime                 DateTime?
}

model Currency {
  id                      String   @id @unique @default(uuid())
  creationTime            DateTime
  baseTime                DateTime
  expirationTimeInMinutes Int
  expiredAt               DateTime
  baseCurrency            String
  convertionRates         Json
}

model FeaturedProjects {
  id                    String    @id @unique @default(uuid())
  creationTime          DateTime
  updationTime          DateTime?
  featuredProjectsCount Int
  projectsIdList        String[]
}

model Image {
  id            String   @id @unique @default(uuid())
  liveLink      String
  applicableFor String
  creationTime  DateTime
}

model MailVerificationCode {
  id                      String   @id @unique @default(uuid())
  verificationCode        String
  expirationTimeInMinutes Int
  expiredAt               DateTime
  emailId                 String   @unique
  creationTime            DateTime
}

model NotificationShader {
  id               String    @id @unique @default(uuid())
  creationTime     DateTime
  updationTime     DateTime?
  initiatedById    String
  initiatedForType String
  initiatedForId   String?
  message          String
}



model RegisteredMail {
  id            String   @id @unique @default(uuid())
  email         String   @unique
  password      String
  emailVerified Boolean
  creationTime  DateTime
}

model Project {
  id                                   String    @id @unique @default(uuid())
  title                                String
  description                          String
  investingCapitalPerUnitinBDT         Float
  baseReturnOnInterestRate             Float
  topReturnOnInterestRate              Float
  returnOnInterestReturnPeriodinMonths Int
  featuredPictureLink                  String
  pictureLinks                         String[]
  tagNames                             String[]
  projectStatus                        String
  location                             String
  updationTime                         DateTime?
  creationTime                         DateTime
}

model Tag {
  id            String    @id @unique @default(uuid())
  title         String
  description   String
  applicableFor String
  creationTime  DateTime
  updationTime  DateTime?
}

model User {
  id                  String    @id @unique @default(uuid())
  creationTime        DateTime
  updationTime        DateTime?
  username            String
  firstName           String
  lastName            String?
  email               String
  phoneNumber         String
  bankAccountNumber   String
  nidCardFrontPicLink String
  nidCardBackPicLink  String
  address             String
  country             String
  dateOfBirth         DateTime
}

model TransactionCodes {
  id           String    @id @unique @default(uuid())
  creationTime DateTime
  updationTime DateTime?
  trxCode      String
  trxName      String
  createdById  String
}

model Transaction {
  id                String    @id @unique @default(uuid())
  creationTime      DateTime
  transactionFromId String
  transactionToId   String
  transactionAmount Float
  transactionStatus String
  trxId             String    @unique
  trxCodeId         String
  updationTime      DateTime?
}

model ReferralOfferings {
  id                String    @id @unique @default(uuid())
  creationTime      DateTime
  updationTime      DateTime?
  referralFromId    String
  referralName      String
  rewardType        String
  rewardAmount      Float
  rewardDescription String
}

model Role {
  id           String    @id @unique @default(uuid())
  creationTime DateTime
  updationTime DateTime?
  roleName     String
}

model WithdrawlRequest {
  id              String    @id @unique @default(uuid())
  processedTime   DateTime
  updationTime    DateTime?
  initiatedById   String
  withdrawlAmount Float
  status          String
  processedById   String
}

model TransactionMessage {
  id                String    @id @unique @default(uuid())
  sendingTime       DateTime
  updationTime      DateTime?
  title             String
  description       String
  transactionFromId String
  transactionToId   String
}

model WebsiteInformation {
  id                    String    @id @unique @default(uuid())
  websiteName           String
  bigLogoLink           String
  smallLogoLink         String
  privacyPolicyLink     String
  termsAndConditionLink String
  creationTime          DateTime
  updationTime          DateTime?
}
